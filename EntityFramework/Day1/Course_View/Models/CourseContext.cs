// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Course_View.Models;

public partial class CourseContext : DbContext
{
    public CourseContext()
    {
    }

    public CourseContext(DbContextOptions<CourseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Course> Courses { get; set; }

    public virtual DbSet<Instructor> Instructors { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=tatakai.database.windows.net;Initial Catalog=StudentsAffairsDB;Persist Security Info=True;User ID=YAhmed;Password=Yousef$3114");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Course>(entity =>
        {
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.instructor).WithMany(p => p.Courses)
                .HasForeignKey(d => d.instructor_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Courses_Instructor");

            entity.HasOne(d => d.preRequestNavigation).WithMany()
                .HasForeignKey(d => d.preRequest)
                .HasConstraintName("FK_PreRequest");
        });

        modelBuilder.Entity<Instructor>(entity =>
        {
            entity.ToTable("Instructor");

            entity.Property(e => e.id).ValueGeneratedNever();
            entity.Property(e => e.major).HasMaxLength(50);
            entity.Property(e => e.mobile).HasMaxLength(20);
            entity.Property(e => e.name)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}